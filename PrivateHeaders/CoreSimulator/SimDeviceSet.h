//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Feb 20 2016 22:04:40).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <CoreSimulator/SimDeviceNotifier-Protocol.h>

@class NSArray, NSDictionary, NSMutableDictionary, NSString, SimDeviceNotificationManager, SimServiceContext;
@protocol OS_dispatch_queue;

@interface SimDeviceSet : NSObject <SimDeviceNotifier>
{
    NSString *_setPath;
    NSObject<OS_dispatch_queue> *_devicesQueue;
    NSMutableDictionary *__devicesByUDID;
    NSMutableDictionary *_devicesNotificationRegIDs;
    NSMutableDictionary *__devicePairsByUUID;
    NSMutableDictionary *_devicePairsNotificationRegIDs;
    SimServiceContext *_serviceContext;
    SimDeviceNotificationManager *_notificationManager;
    NSDictionary *_defaultCreatedDevices;
}

+ (id)setForSetPath:(id)arg1 serviceContext:(id)arg2;
+ (id)setForSetPath:(id)arg1;
+ (id)defaultSet;
+ (id)defaultSetPath;
@property (nonatomic, copy) NSDictionary *defaultCreatedDevices;
@property (retain, nonatomic) SimDeviceNotificationManager *notificationManager;
@property (retain, nonatomic) SimServiceContext *serviceContext;
@property (retain, nonatomic) NSMutableDictionary *devicePairsNotificationRegIDs;
@property (retain, nonatomic) NSMutableDictionary *_devicePairsByUUID;
@property (retain, nonatomic) NSMutableDictionary *devicesNotificationRegIDs;
@property (retain, nonatomic) NSMutableDictionary *_devicesByUDID;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *devicesQueue;
@property (copy, nonatomic) NSString *setPath;
- (void)handleXPCRequestUnpair:(NSDictionary *)arg1;
- (void)handleXPCRequestPair:(NSDictionary *)arg1;
- (void)handleXPCRequestDeleteDevice:(NSDictionary *)arg1 device:(id)arg2;
- (void)handleXPCRequestCloneDevice:(NSDictionary *)arg1 device:(id)arg2;
- (void)handleXPCRequestCreateDevice:(NSDictionary *)arg1;
- (void)handleXPCRequest:(NSDictionary *)arg1;
- (void)handleXPCNotificationDevicePairRemoved:(NSDictionary *)arg1;
- (void)handleXPCNotificationDevicePairAdded:(NSDictionary *)arg1;
- (void)handleXPCNotificationDeviceRemoved:(NSDictionary *)arg1;
- (void)handleXPCNotificationDeviceAdded:(NSDictionary *)arg1;
- (void)handleXPCNotification:(NSDictionary *)arg1;
- (BOOL)unpairDevicePair:(id)arg1 error:(id *)arg2;
- (void)unpairDevicePairAsync:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)unpairDevicePairAsync:(id)arg1 completionQueue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)createDevicePairWithGizmo:(id)arg1 companion:(id)arg2 error:(id *)arg3;
- (void)createDevicePairAsyncWithGizmo:(id)arg1 companion:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)createDevicePairAsyncWithGizmo:(id)arg1 companion:(id)arg2 completionQueue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (BOOL)testDevicePairingBetweenGizmo:(id)arg1 companion:(id)arg2 error:(id *)arg3;
- (BOOL)deleteDevice:(id)arg1 error:(id *)arg2;
- (void)deleteDeviceAsync:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)cloneDevice:(id)arg1 name:(id)arg2 error:(id *)arg3;
- (void)cloneDeviceAsync:(id)arg1 name:(id)arg2 completionQueue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)deleteDeviceAsync:(id)arg1 completionQueue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)createDeviceWithType:(id)arg1 runtime:(id)arg2 name:(id)arg3 error:(id *)arg4;
- (void)createDeviceAsyncWithType:(id)arg1 runtime:(id)arg2 name:(id)arg3 completionQueue:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)createDeviceAsyncWithType:(id)arg1 runtime:(id)arg2 name:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (BOOL)unregisterNotificationHandler:(unsigned long long)arg1 error:(id *)arg2;
- (void)sendNotification:(id)arg1;
- (unsigned long long)registerNotificationHandlerOnQueue:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (unsigned long long)registerNotificationHandler:(CDUnknownBlockType)arg1;
- (void)removeDevicePairAsync:(id)arg1;
- (void)addDevicePair:(id)arg1;
- (void)addDevicePairAsync:(id)arg1;
- (void)removeDeviceAsync:(id)arg1;
- (void)addDevice:(id)arg1;
- (void)addDeviceAsync:(id)arg1;
- (void)updateDefaultDevicePairingsToBundledRuntimes;
- (void)updateDefaultDevices;
- (id)devicePairsContainingDevice:(id)arg1;
- (id)devicePairsContainingDeviceUDID:(id)arg1;
@property(readonly, copy) NSArray *availableDevicePairs;
@property(readonly, copy) NSArray *devicePairs;
@property(readonly, copy) NSDictionary *devicePairsByUUID;
@property (readonly, copy) NSArray *availableDevices;
@property (atomic, copy, readonly) NSArray *devices;
- (BOOL)isDeviceInSet:(id)arg1;
@property(readonly, copy) NSDictionary *devicesByUDID;
- (id)description;
- (void)saveToDisk;
- (void)processDeviceSetPlist;
- (id)initWithSetPath:(id)arg1 serviceContext:(id)arg2;
- (id)init;
- (BOOL)subscribeToNotificationsWithError:(id *)arg1;

@end

